% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{ExonDataFrame}
\alias{ExonDataFrame}
\title{An ExonDataFrame is a data frame that is backed by an Exon engine.}
\description{
An ExonDataFrame is a data frame that is backed by an Exon engine.
}
\examples{

## ------------------------------------------------
## Method `ExonDataFrame$to_arrow`
## ------------------------------------------------

session <- ExonRSessionContext$new()

session$execute("CREATE EXTERNAL TABLE fasta_table STORED AS FASTA LOCATION './file.fasta'")
arrow_table <- session$sql("SELECT * FROM fasta_table")$to_arrow()

# Then arrow table can be converted to a data.frame or registered with duckdb, for example.
# E.g. assuming a duckdb connection con:
arrow::to_duckdb(arrow_table, table_name = "gene_annotations", con = con)

# or dataframe
df <- data.frame(arrow_table)

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ExonDataFrame-new}{\code{ExonDataFrame$new()}}
\item \href{#method-ExonDataFrame-to_arrow}{\code{ExonDataFrame$to_arrow()}}
\item \href{#method-ExonDataFrame-clone}{\code{ExonDataFrame$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExonDataFrame-new"></a>}}
\if{latex}{\out{\hypertarget{method-ExonDataFrame-new}{}}}
\subsection{Method \code{new()}}{
Initialize the ExonDataFrame object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExonDataFrame$new(result)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{result}}{Dataframe that serves as the base for ExonDataFrame.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExonDataFrame-to_arrow"></a>}}
\if{latex}{\out{\hypertarget{method-ExonDataFrame-to_arrow}{}}}
\subsection{Method \code{to_arrow()}}{
Convert the ExonDataFrame to an Arrow table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExonDataFrame$to_arrow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An Arrow table.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{session <- ExonRSessionContext$new()

session$execute("CREATE EXTERNAL TABLE fasta_table STORED AS FASTA LOCATION './file.fasta'")
arrow_table <- session$sql("SELECT * FROM fasta_table")$to_arrow()

# Then arrow table can be converted to a data.frame or registered with duckdb, for example.
# E.g. assuming a duckdb connection con:
arrow::to_duckdb(arrow_table, table_name = "gene_annotations", con = con)

# or dataframe
df <- data.frame(arrow_table)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExonDataFrame-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ExonDataFrame-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExonDataFrame$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
