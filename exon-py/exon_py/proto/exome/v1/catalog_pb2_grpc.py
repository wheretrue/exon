# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from exon_py.proto.exome.v1 import catalog_pb2 as exome_dot_v1_dot_catalog__pb2


class CatalogServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLibrary = channel.unary_unary(
            "/exome.v1.CatalogService/CreateLibrary",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateLibraryRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateLibraryResponse.FromString,
        )
        self.ListLibraries = channel.unary_unary(
            "/exome.v1.CatalogService/ListLibraries",
            request_serializer=exome_dot_v1_dot_catalog__pb2.ListLibrariesRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.ListLibrariesResponse.FromString,
        )
        self.GetLibrary = channel.unary_unary(
            "/exome.v1.CatalogService/GetLibrary",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetLibraryRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetLibraryResponse.FromString,
        )
        self.GetLibraryByName = channel.unary_unary(
            "/exome.v1.CatalogService/GetLibraryByName",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetLibraryByNameRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetLibraryByNameResponse.FromString,
        )
        self.CreateCatalog = channel.unary_unary(
            "/exome.v1.CatalogService/CreateCatalog",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateCatalogRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateCatalogResponse.FromString,
        )
        self.GetCatalog = channel.unary_unary(
            "/exome.v1.CatalogService/GetCatalog",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetCatalogRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetCatalogResponse.FromString,
        )
        self.ListCatalogs = channel.unary_unary(
            "/exome.v1.CatalogService/ListCatalogs",
            request_serializer=exome_dot_v1_dot_catalog__pb2.ListCatalogsRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.ListCatalogsResponse.FromString,
        )
        self.GetCatalogByName = channel.unary_unary(
            "/exome.v1.CatalogService/GetCatalogByName",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetCatalogByNameRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetCatalogByNameResponse.FromString,
        )
        self.CreateSchema = channel.unary_unary(
            "/exome.v1.CatalogService/CreateSchema",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateSchemaRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateSchemaResponse.FromString,
        )
        self.ListSchemas = channel.unary_unary(
            "/exome.v1.CatalogService/ListSchemas",
            request_serializer=exome_dot_v1_dot_catalog__pb2.ListSchemasRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.ListSchemasResponse.FromString,
        )
        self.GetSchema = channel.unary_unary(
            "/exome.v1.CatalogService/GetSchema",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetSchemaRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetSchemaResponse.FromString,
        )
        self.GetSchemaByName = channel.unary_unary(
            "/exome.v1.CatalogService/GetSchemaByName",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetSchemaByNameRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetSchemaByNameResponse.FromString,
        )
        self.CreateTable = channel.unary_unary(
            "/exome.v1.CatalogService/CreateTable",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateTableRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateTableResponse.FromString,
        )
        self.ListTables = channel.unary_unary(
            "/exome.v1.CatalogService/ListTables",
            request_serializer=exome_dot_v1_dot_catalog__pb2.ListTablesRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.ListTablesResponse.FromString,
        )
        self.GetTable = channel.unary_unary(
            "/exome.v1.CatalogService/GetTable",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetTableRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetTableResponse.FromString,
        )
        self.GetTableByName = channel.unary_unary(
            "/exome.v1.CatalogService/GetTableByName",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetTableByNameRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetTableByNameResponse.FromString,
        )
        self.ListFileFormats = channel.unary_unary(
            "/exome.v1.CatalogService/ListFileFormats",
            request_serializer=exome_dot_v1_dot_catalog__pb2.ListFileFormatsRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.ListFileFormatsResponse.FromString,
        )
        self.CreateUser = channel.unary_unary(
            "/exome.v1.CatalogService/CreateUser",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateUserRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateUserResponse.FromString,
        )
        self.CreateUserAuthProvider = channel.unary_unary(
            "/exome.v1.CatalogService/CreateUserAuthProvider",
            request_serializer=exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderResponse.FromString,
        )
        self.GetToken = channel.unary_unary(
            "/exome.v1.CatalogService/GetToken",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetTokenRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetTokenResponse.FromString,
        )
        self.GetUser = channel.unary_unary(
            "/exome.v1.CatalogService/GetUser",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetUserRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserResponse.FromString,
        )
        self.GetUserByEmail = channel.unary_unary(
            "/exome.v1.CatalogService/GetUserByEmail",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetUserByEmailRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserByEmailResponse.FromString,
        )
        self.GetUserOrganizations = channel.unary_unary(
            "/exome.v1.CatalogService/GetUserOrganizations",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsResponse.FromString,
        )
        self.GetOrganization = channel.unary_unary(
            "/exome.v1.CatalogService/GetOrganization",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetOrganizationRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetOrganizationResponse.FromString,
        )
        self.GetUserAuditLog = channel.unary_unary(
            "/exome.v1.CatalogService/GetUserAuditLog",
            request_serializer=exome_dot_v1_dot_catalog__pb2.GetUserAuditLogRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserAuditLogResponse.FromString,
        )
        self.RunQuery = channel.unary_unary(
            "/exome.v1.CatalogService/RunQuery",
            request_serializer=exome_dot_v1_dot_catalog__pb2.RunQueryRequest.SerializeToString,
            response_deserializer=exome_dot_v1_dot_catalog__pb2.RunQueryResponse.FromString,
        )


class CatalogServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateLibrary(self, request, context):
        """Library"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListLibraries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetLibrary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetLibraryByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateCatalog(self, request, context):
        """Catalog"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCatalog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListCatalogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCatalogByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateSchema(self, request, context):
        """Schema"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSchemas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSchemaByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateTable(self, request, context):
        """Table"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetTableByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListFileFormats(self, request, context):
        """File Formats"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateUser(self, request, context):
        """User information."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateUserAuthProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserAuditLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RunQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CatalogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateLibrary": grpc.unary_unary_rpc_method_handler(
            servicer.CreateLibrary,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateLibraryRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateLibraryResponse.SerializeToString,
        ),
        "ListLibraries": grpc.unary_unary_rpc_method_handler(
            servicer.ListLibraries,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.ListLibrariesRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.ListLibrariesResponse.SerializeToString,
        ),
        "GetLibrary": grpc.unary_unary_rpc_method_handler(
            servicer.GetLibrary,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetLibraryRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetLibraryResponse.SerializeToString,
        ),
        "GetLibraryByName": grpc.unary_unary_rpc_method_handler(
            servicer.GetLibraryByName,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetLibraryByNameRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetLibraryByNameResponse.SerializeToString,
        ),
        "CreateCatalog": grpc.unary_unary_rpc_method_handler(
            servicer.CreateCatalog,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateCatalogRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateCatalogResponse.SerializeToString,
        ),
        "GetCatalog": grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalog,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetCatalogRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetCatalogResponse.SerializeToString,
        ),
        "ListCatalogs": grpc.unary_unary_rpc_method_handler(
            servicer.ListCatalogs,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.ListCatalogsRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.ListCatalogsResponse.SerializeToString,
        ),
        "GetCatalogByName": grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogByName,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetCatalogByNameRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetCatalogByNameResponse.SerializeToString,
        ),
        "CreateSchema": grpc.unary_unary_rpc_method_handler(
            servicer.CreateSchema,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateSchemaRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateSchemaResponse.SerializeToString,
        ),
        "ListSchemas": grpc.unary_unary_rpc_method_handler(
            servicer.ListSchemas,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.ListSchemasRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.ListSchemasResponse.SerializeToString,
        ),
        "GetSchema": grpc.unary_unary_rpc_method_handler(
            servicer.GetSchema,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetSchemaRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetSchemaResponse.SerializeToString,
        ),
        "GetSchemaByName": grpc.unary_unary_rpc_method_handler(
            servicer.GetSchemaByName,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetSchemaByNameRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetSchemaByNameResponse.SerializeToString,
        ),
        "CreateTable": grpc.unary_unary_rpc_method_handler(
            servicer.CreateTable,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateTableRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateTableResponse.SerializeToString,
        ),
        "ListTables": grpc.unary_unary_rpc_method_handler(
            servicer.ListTables,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.ListTablesRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.ListTablesResponse.SerializeToString,
        ),
        "GetTable": grpc.unary_unary_rpc_method_handler(
            servicer.GetTable,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetTableRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetTableResponse.SerializeToString,
        ),
        "GetTableByName": grpc.unary_unary_rpc_method_handler(
            servicer.GetTableByName,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetTableByNameRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetTableByNameResponse.SerializeToString,
        ),
        "ListFileFormats": grpc.unary_unary_rpc_method_handler(
            servicer.ListFileFormats,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.ListFileFormatsRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.ListFileFormatsResponse.SerializeToString,
        ),
        "CreateUser": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateUserRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateUserResponse.SerializeToString,
        ),
        "CreateUserAuthProvider": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUserAuthProvider,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderResponse.SerializeToString,
        ),
        "GetToken": grpc.unary_unary_rpc_method_handler(
            servicer.GetToken,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetTokenRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetTokenResponse.SerializeToString,
        ),
        "GetUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetUserResponse.SerializeToString,
        ),
        "GetUserByEmail": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserByEmail,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserByEmailRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetUserByEmailResponse.SerializeToString,
        ),
        "GetUserOrganizations": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserOrganizations,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsResponse.SerializeToString,
        ),
        "GetOrganization": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganization,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetOrganizationRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetOrganizationResponse.SerializeToString,
        ),
        "GetUserAuditLog": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserAuditLog,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.GetUserAuditLogRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.GetUserAuditLogResponse.SerializeToString,
        ),
        "RunQuery": grpc.unary_unary_rpc_method_handler(
            servicer.RunQuery,
            request_deserializer=exome_dot_v1_dot_catalog__pb2.RunQueryRequest.FromString,
            response_serializer=exome_dot_v1_dot_catalog__pb2.RunQueryResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("exome.v1.CatalogService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CatalogService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateLibrary(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateLibrary",
            exome_dot_v1_dot_catalog__pb2.CreateLibraryRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateLibraryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListLibraries(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/ListLibraries",
            exome_dot_v1_dot_catalog__pb2.ListLibrariesRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.ListLibrariesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetLibrary(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetLibrary",
            exome_dot_v1_dot_catalog__pb2.GetLibraryRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetLibraryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetLibraryByName(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetLibraryByName",
            exome_dot_v1_dot_catalog__pb2.GetLibraryByNameRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetLibraryByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateCatalog(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateCatalog",
            exome_dot_v1_dot_catalog__pb2.CreateCatalogRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateCatalogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetCatalog(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetCatalog",
            exome_dot_v1_dot_catalog__pb2.GetCatalogRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetCatalogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListCatalogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/ListCatalogs",
            exome_dot_v1_dot_catalog__pb2.ListCatalogsRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.ListCatalogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetCatalogByName(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetCatalogByName",
            exome_dot_v1_dot_catalog__pb2.GetCatalogByNameRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetCatalogByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateSchema(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateSchema",
            exome_dot_v1_dot_catalog__pb2.CreateSchemaRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListSchemas(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/ListSchemas",
            exome_dot_v1_dot_catalog__pb2.ListSchemasRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.ListSchemasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetSchema(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetSchema",
            exome_dot_v1_dot_catalog__pb2.GetSchemaRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetSchemaByName(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetSchemaByName",
            exome_dot_v1_dot_catalog__pb2.GetSchemaByNameRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetSchemaByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateTable(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateTable",
            exome_dot_v1_dot_catalog__pb2.CreateTableRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateTableResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListTables(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/ListTables",
            exome_dot_v1_dot_catalog__pb2.ListTablesRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.ListTablesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetTable(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetTable",
            exome_dot_v1_dot_catalog__pb2.GetTableRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetTableResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetTableByName(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetTableByName",
            exome_dot_v1_dot_catalog__pb2.GetTableByNameRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetTableByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListFileFormats(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/ListFileFormats",
            exome_dot_v1_dot_catalog__pb2.ListFileFormatsRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.ListFileFormatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateUser",
            exome_dot_v1_dot_catalog__pb2.CreateUserRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateUserAuthProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/CreateUserAuthProvider",
            exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.CreateUserAuthProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetToken(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetToken",
            exome_dot_v1_dot_catalog__pb2.GetTokenRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetUser",
            exome_dot_v1_dot_catalog__pb2.GetUserRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserByEmail(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetUserByEmail",
            exome_dot_v1_dot_catalog__pb2.GetUserByEmailRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetUserByEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserOrganizations(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetUserOrganizations",
            exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetUserOrganizationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOrganization(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetOrganization",
            exome_dot_v1_dot_catalog__pb2.GetOrganizationRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetOrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserAuditLog(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/GetUserAuditLog",
            exome_dot_v1_dot_catalog__pb2.GetUserAuditLogRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.GetUserAuditLogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RunQuery(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/exome.v1.CatalogService/RunQuery",
            exome_dot_v1_dot_catalog__pb2.RunQueryRequest.SerializeToString,
            exome_dot_v1_dot_catalog__pb2.RunQueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
