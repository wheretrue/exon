name: Release

on:
  push:
    tags:
      - v*

permissions:
  id-token: write
  contents: write

jobs:
  # Create a GitHub release for this tag
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')

          gh release create $TAG -t $TAG -n "Release $TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
    needs: create_release
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build exon-cli
        run: cargo build --release --manifest-path exon/exon-cli/Cargo.toml
      - name: Upload Release Asset
        shell: bash
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')

          if [ "${{ runner.os }}" = "Windows" ]; then
            mv target/release/exon-cli.exe target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}.exe
            tar -czf target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}.tar.gz target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}.exe
          else
            mv target/release/exon-cli target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}
            tar -czf target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}.tar.gz target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}
          fi

          gh release upload $TAG target/release/exon-cli-${{ runner.os }}-${{ runner.arch }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Publish exon-common
        run: |
          cargo publish --manifest-path exon/exon-common/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-sam
        run: cargo publish --manifest-path exon/exon-sam/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-bam
        run: |
          cargo publish --manifest-path exon/exon-bam/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-vcf
        run: cargo publish --manifest-path exon/exon-vcf/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-bcf
        run: |
          cargo publish --manifest-path exon/exon-bcf/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-bed
        run: cargo publish --manifest-path exon/exon-bed/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-fasta
        run: |
          cargo publish --manifest-path exon/exon-fasta/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-fastq
        run: cargo publish --manifest-path exon/exon-fastq/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-fcs
        run: |
          cargo publish --manifest-path exon/exon-fcs/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-genbank
        run: cargo publish --manifest-path exon/exon-genbank/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-gff
        run: |
          cargo publish --manifest-path exon/exon-gff/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-gtf
        run: cargo publish --manifest-path exon/exon-gtf/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-mzml
        run: |
          cargo publish --manifest-path exon/exon-mzml/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-io
        run: |
          cargo publish --manifest-path exon/exon-io/Cargo.toml
          cargo clean
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-core
        run: cargo publish --manifest-path exon/exon-core/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish exon-py
        run: cargo publish --manifest-path python/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
